[gcode_macro _Probe_Dock_Servo_Variables]
variable_servo_name:                      'probe_dock_servo'    # the name in your [servo] section of printer.cfg
variable_servo_extended_angle:            180
variable_servo_retracted_angle:           90                # default to initial_angle in [servo] section
gcode:

###########################
# Extend Probe Dock Routine
[gcode_macro extend_probe_dock]
description: Extend Klicky Probe Dock
gcode:
    # Get probe dock servo variables
    {% set servo_name = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_name|default('probe_dock_servo') %}
    
    {% set initial_angle = printer['configfile'].config["servo " + servo_name]['initial_angle']|int %}
    
    {% if 'servo_extended_angle' in printer["gcode_macro _Probe_Dock_Servo_Variables"] %}
        {% set SEA = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_extended_angle | int %}
    {% else %}
        {% set SEA = initial_angle + 90 %}
    {% endif %}
        
    { action_respond_info("Extending Probe Dock: Angle = " + SEA|string) }
    SET_SERVO SERVO={servo_name} ANGLE={SEA}
    M400      # wait for the move to finish

############################
# Retract Probe Dock Routine
[gcode_macro retract_probe_dock]
description: Retract Klicky Probe Dock
gcode:
    # Get probe dock servo variables
    {% set servo_name = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_name|default('probe_dock_servo') %}
    
    {% set initial_angle = printer['configfile'].config["servo " + servo_name]['initial_angle']|int %}
    
    {% if 'servo_retracted_angle' in printer["gcode_macro _Probe_Dock_Servo_Variables"] %}
        {% set SRA = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_retracted_angle | int %}
    {% else %}
        {% set SRA = initial_angle %}
    {% endif %}
    
    { action_respond_info("Retracting Probe Dock: Angle = " + SRA|string) }
    SET_SERVO SERVO={servo_name} ANGLE={SRA}
    M400      # wait for the move to finish

[gcode_macro servo_stress_test]
description: [COUNT=xxx] (default is 10 times)
gcode:
    {% set count = params.COUNT|default(10)|int %}
    {% for iters in range(1, count) %}
        extend_probe_dock
        retract_probe_dock
    {% endfor %}

[gcode_macro docking_stress_test]
description: [COUNT=xxx] (default is 10 times)

variable_prep_spd_xy:        3600	

gcode:
    {% set count = params.COUNT|default(10)|int %}
    {% set Bx = printer.configfile.config["stepper_x"]["position_endstop"]|float %}
    {% set By = printer.configfile.config["stepper_y"]["position_endstop"]|float %}
        
    {% for iters in range(1, count) %}
        dock_probe
        # move to a random location
        {% set x_pos = range(0, Bx|int)|random| int %}
        {% set y_pos = range(0, By|int)|random| int %}
        G0 X{x_pos} Y{x_pos} F{prep_spd_xy}
        
        attach_probe
        # move to a random location
        {% set x_pos = range(0, Bx|int)|random| int %}
        {% set y_pos = range(0, By|int)|random| int %}
        G0 X{x_pos} Y{x_pos} F{prep_spd_xy}
    {% endfor %}

############################
# Reset Probe Dock Routine
[gcode_macro reset_probe_dock]
description: Reset Klicky Probe Dock to 0
gcode:
    {% if 'servo_extended_angle' in printer["gcode_macro _Probe_Dock_Servo_Variables"] %}
        {% set SEA = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_extended_angle | int %}
    {% else %}
        {% set SEA = initial_angle%}
    {% endif %}

    {% if 'servo_retracted_angle' in printer["gcode_macro _Probe_Dock_Servo_Variables"] %}
        {% set SRA = printer["gcode_macro _Probe_Dock_Servo_Variables"].servo_retracted_angle | int %}
    {% else %}
        {% set SRA = initial_angle + 90 %}
    {% endif %}

    SET_SERVO SERVO={servo_name} ANGLE={SRA}
    SET_SERVO SERVO={servo_name} ANGLE={SEA}
