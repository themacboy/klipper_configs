[delayed_gcode START_UP_IDEX]
initial_duration: 0.01
gcode:
    CONFIGS_IDEX

[gcode_macro CONFIGS_IDEX]
variable_current_tool: 0
variable_current_extruder: 0
variable_current_extruder_name: ''
variable_current_extruder_temp: 0
variable_current_extruder_retract: 0.0
variable_current_extruder_offset_x: 0.0
variable_current_extruder_offset_y: 0.0
variable_current_extruder_offset_z: 0.0
variable_current_extruder_park: 0.0
variable_probe_tool: 0

variable_extruder_0_name: 'extruder'
variable_extruder_0_temp: 0
variable_extruder_0_id: 0
variable_extruder_0_retract: 0.0
variable_extruder_0_offset_x: 0.0
variable_extruder_0_offset_y: 0.0
variable_extruder_0_offset_z: 0.0
variable_extruder_0_park: -72.6

variable_extruder_1_name: 'extruder1'
variable_extruder_1_temp: 0
variable_extruder_1_id: 1
variable_extruder_1_retract: 0.0
variable_extruder_1_offset_x: 0.0
variable_extruder_1_offset_y: -1.06
variable_extruder_1_offset_z: 0.850
variable_extruder_1_park: 344.0

variable_tool_changes: 0
variable_temperature_standby: 20
variable_retract_extra: 2.0
variable_extrude_purge: 10.0
variable_unretract_0_speed: 450
variable_unretract_1_speed: 450
variable_fan_idle_speed: 0.3
variable_new_extruder: None
variable_park_speed: 6000
variable_z_speed: 300

variable_purge_park_distance: 50
variable_purge_x: 90
variable_purge_y: -45.8
variable_purge_z_raise: 1
variable_purge_dist: 90
variable_purge_qty: 3
variable_purge_speed: 6000
variable_raise_distance: 30
variable_purge_direction: 'left'

gcode:
    { action_respond_info('Load CONFIGS IDEX') }

    _SET_CURRENT_CARRIAGE CARRIAGE=0
    ACTIVATE_EXTRUDER EXTRUDER=extruder

[gcode_macro CONFIGS_RESET]
gcode:
    { action_respond_info('Reset CONFIGS IDEX') }

    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=tool_changes VALUE=0
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_tool VALUE=0
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder VALUE=0
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=extruder_0_name VALUE="extruder"
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=extruder_0_temp VALUE=0
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=extruder_0_retract VALUE=0
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=extruder_1_name VALUE="extruder1"
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=extruder_1_temp VALUE=0
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=extruder_1_retract VALUE=0
    _SET_CURRENT_CARRIAGE CARRIAGE=0

[gcode_macro CONFIGS_LOAD_CURRENT_VALUES]
gcode:
    #{ action_respond_info('Loading values on variables') }

    {% if printer['gcode_macro CONFIGS_IDEX'].current_tool|int == 0 %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_name VALUE='"{ printer['gcode_macro CONFIGS_IDEX'].extruder_0_name|string }"'
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_temp VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_0_temp|int }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_retract VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_0_retract|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_offset_x VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_0_offset_x|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_offset_y VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_0_offset_y|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_offset_z VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_0_offset_z|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_park VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_0_park|float }
    {% else %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_name VALUE='"{ printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string }"'
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_temp VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_1_temp|int }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_retract VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_1_retract|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_offset_x VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_1_offset_x|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_offset_y VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_1_offset_y|float  }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_offset_z VALUE={ printer['gcode_macro CONFIGS_IDEX'].extruder_1_offset_z|float }
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder_park VALUE={printer['gcode_macro CONFIGS_IDEX'].extruder_1_park|float}
    {% endif %}

[gcode_macro _HOME_OVERWRITE]
gcode:
  {% set t_tool = 0 %}
  {% if printer.active_carriage ==  "CARRIAGE_1" %}
    {% set t_tool = 1 %}
  {% endif %}
  
  {% if t_tool != printer['gcode_macro CONFIGS_IDEX'].probe_tool|int %}
    _SET_CURRENT_CARRIAGE CARRIAGE={ t_tool }
  {% endif %}

[gcode_macro EXTRUDER_COOLDOWN]
gcode:
    {% if printer[printer['gcode_macro CONFIGS_IDEX'].current_extruder_name|string].can_extrude|lower == 'true' %}

      G92 E0 ;
      G1 E-{ printer['gcode_macro CONFIGS_IDEX'].current_extruder_retract|float + printer['gcode_macro CONFIGS_IDEX'].retract_extra|float };

      {% if printer['gcode_macro CONFIGS_IDEX'].current_extruder_temp|int > 0 %}
        # { action_respond_info('Cooldown extruder: ' + printer['gcode_macro CONFIGS_IDEX'].current_extruder_name|string ) }
        # M104 S{ printer['gcode_macro CONFIGS_IDEX'].current_extruder_temp|int - printer['gcode_macro CONFIGS_IDEX'].temperature_standby|int } T{ printer['gcode_macro CONFIGS_IDEX'].current_extruder|string }
      {% endif %}
    {% endif %}

    SET_FAN_SPEED FAN=fan_{ printer['gcode_macro CONFIGS_IDEX'].current_extruder|string } SPEED={ printer['gcode_macro CONFIGS_IDEX'].fan_idle_speed|float }

[gcode_macro EXTRUDER_CLEAN]
gcode:
    {% set extruder_secondary = 0 %}
    {% set position_x_primary = 0 %}
    {% set position_x_secondary = 0 %}
    {% set extruder_retract = 0 %}
    {% set extruder_retract_speed = 0 %}
    {% set ispurge = params.ISPURGE|lower %}

    { action_respond_info( 'NEW EXTRUDER: ' + printer['gcode_macro CONFIGS_IDEX'].new_extruder|string ) }

    ##PARK TOOLHEAD FOR CLEAN NOZZLE
    {% if printer['gcode_macro CONFIGS_IDEX'].new_extruder == 0 %} 
      {% set extruder_secondary = 1 %}
      {% set position_x_primary = printer['gcode_macro CONFIGS_IDEX'].extruder_0_park|float %}
      #{% set position_x_primary = printer['gcode_macro CONFIGS_IDEX'].extruder_0_park|float + printer['gcode_macro CONFIGS_IDEX'].purge_park_distance|float %}
      {% set position_x_secondary = printer['gcode_macro CONFIGS_IDEX'].extruder_1_park|float %}
      #{% set position_x_secondary = printer['gcode_macro CONFIGS_IDEX'].extruder_1_park|float - printer['gcode_macro CONFIGS_IDEX'].purge_park_distance|float %}
      {% set extruder_retract = printer['gcode_macro CONFIGS_IDEX'].extruder_0_retract|float %}
      {% set extruder_retract_speed = printer['gcode_macro CONFIGS_IDEX'].unretract_0_speed|int %}
    {% else %}
      {% set extruder_secondary = 0 %}
      {% set position_x_primary = printer['gcode_macro CONFIGS_IDEX'].extruder_1_park|float %}
      #{% set position_x_primary = printer['gcode_macro CONFIGS_IDEX'].extruder_1_park|float - printer['gcode_macro CONFIGS_IDEX'].purge_park_distance|float %}
      {% set position_x_secondary = printer['gcode_macro CONFIGS_IDEX'].extruder_0_park|float %}
      #{% set position_x_secondary = printer['gcode_macro CONFIGS_IDEX'].extruder_0_park|float + printer['gcode_macro CONFIGS_IDEX'].purge_park_distance|float %}
      {% set extruder_retract = printer['gcode_macro CONFIGS_IDEX'].extruder_1_retract|float %}
      {% set extruder_retract_speed = printer['gcode_macro CONFIGS_IDEX'].unretract_1_speed|int %}
    {% endif %}

    G91
    G1 Z+{ printer['gcode_macro CONFIGS_IDEX'].purge_z_raise|float }
    G90

    _SET_CURRENT_CARRIAGE CARRIAGE={ extruder_secondary }
    # G1 X{ position_x } F{ printer['gcode_macro CONFIGS_IDEX'].park_speed|int }
    G1 X{ position_x_secondary } F{ printer['gcode_macro CONFIGS_IDEX'].park_speed|int }
    _SET_CURRENT_CARRIAGE CARRIAGE={ printer['gcode_macro CONFIGS_IDEX'].new_extruder }
    G1 X{ position_x_primary } F{ printer['gcode_macro CONFIGS_IDEX'].park_speed|int }

    { action_respond_info( "EXTRUDE PURGE: " + ispurge ) }

    ## SET DIRECTION
    {% set start_point = 0 %}
    {% set end_point = 0 %}

    {% if printer['gcode_macro CONFIGS_IDEX'].purge_direction|string == 'right' %}
      {% set start_point = printer['gcode_macro CONFIGS_IDEX'].purge_x|float %}
      {% set end_point = ( printer['gcode_macro CONFIGS_IDEX'].purge_x|float + printer['gcode_macro CONFIGS_IDEX'].purge_dist|float ) %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=purge_direction VALUE='"left"'
    {% elif printer['gcode_macro CONFIGS_IDEX'].purge_direction|string == 'left' %}
      {% set start_point = (printer['gcode_macro CONFIGS_IDEX'].purge_x|float + printer['gcode_macro CONFIGS_IDEX'].purge_dist|float ) %}
      {% set end_point = printer['gcode_macro CONFIGS_IDEX'].purge_x|float %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=purge_direction VALUE='"right"'
    {% endif %}

    G1 Y{ printer['gcode_macro CONFIGS_IDEX'].purge_y|float } F{ printer['gcode_macro CONFIGS_IDEX'].purge_speed|int }
    G1 X{ start_point } F{ printer['gcode_macro CONFIGS_IDEX'].purge_speed|int }

    {% if ispurge == 'true' %}
      G92 E0 ;
      G1 E+{ extruder_retract +  printer['gcode_macro CONFIGS_IDEX'].extrude_purge|float } F{ extruder_retract_speed };
      G92 E0 ;
      { action_respond_info( "EXTRUDE PURGE: " + ( extruder_retract +  printer['gcode_macro CONFIGS_IDEX'].extrude_purge|float)|string ) }
    {% endif %}

    {% for wipes in range( 1, ( printer['gcode_macro CONFIGS_IDEX'].purge_qty|int + 1 ) ) %}
      G1 X{ end_point } F{ printer['gcode_macro CONFIGS_IDEX'].purge_speed|int }
      G1 X{ start_point } F{ printer['gcode_macro CONFIGS_IDEX'].purge_speed|int }
    {% endfor %}

    G1 X{ printer['configfile'].config["stepper_x"]["position_max"]|float / 2 } F{ printer['gcode_macro CONFIGS_IDEX'].purge_speed|int } 
    G1 Y0 F{ printer['gcode_macro CONFIGS_IDEX'].purge_speed|int } 
    M400

[gcode_macro _SET_CURRENT_CARRIAGE]
gcode:
    SET_DUAL_CARRIAGE CARRIAGE={ params.CARRIAGE }
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_tool VALUE={ params.CARRIAGE }
    SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder VALUE={ params.CARRIAGE }
    CONFIGS_LOAD_CURRENT_VALUES
    {% if "xyz" in printer.toolhead.homed_axes %}
      LOAD_OFFSETS
    {% endif %}

[gcode_macro LOAD_OFFSETS]
gcode:
    {% if params.X is defined %}
      SET_GCODE_OFFSET X={ params.X|float } Y={ params.Y|float } Z={ params.Z|float } MOVE=1
    {% else %}
      SET_GCODE_OFFSET X={ printer['gcode_macro CONFIGS_IDEX'].current_extruder_offset_x|float } Y={ printer['gcode_macro CONFIGS_IDEX'].current_extruder_offset_y|float } Z={ printer['gcode_macro CONFIGS_IDEX'].current_extruder_offset_z|float } MOVE=1
    {% endif %}

[gcode_macro CHANGE_TOOL]
gcode:

    { action_respond_info('Init CHANGE TOOL script') }

    {%if params.NEW_EXTRUDER is defined %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=new_extruder VALUE={ params.NEW_EXTRUDER|int }
    {% else %}
        { actiQon_respond_info('ERROR: NEW TOOL NOT PROVIDED') }
        CANCEL_PRINT
    {% endif %}
  
    ## SET LOCAL VARIABLES
    #{% set extruder_0_offset_x = printer['gcode_macro CONFIGS_IDEX'].extruder_0_offset_x|float %}
    #{% set extruder_0_offset_y = printer['gcode_macro CONFIGS_IDEX'].extruder_0_offset_y|float %}
    #{% set extruder_0_offset_z = printer['gcode_macro CONFIGS_IDEX'].extruder_0_offset_z|float %}
    {% set temperature_standby = printer['gcode_macro CONFIGS_IDEX'].temperature_standby|int %}
    {% set purge_park_distance = printer['gcode_macro CONFIGS_IDEX'].purge_park_distance|int %}
    {% set extruder_1_park = printer['gcode_macro CONFIGS_IDEX'].extruder_1_park|float %}
    {% set new_extruder = params.NEW_EXTRUDER|int %}

    ## CHECK TOOLHEAD
    #{% if printer.dual_carriage.active_carriage == 'CARRIAGE_0' %}
    {% if printer.toolhead.extruder == printer['gcode_macro CONFIGS_IDEX'].extruder_0_name|string %} #PENDING FOR KLIPPER ISSUE https://github.com/Klipper3d/klipper/issues/5681 
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_tool VALUE=0
    #{% elif printer.dual_carriage.active_carriage == 'CARRIAGE_1' %}
    {% elif printer.toolhead.extruder == printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_tool VALUE=1
    {% else %}
      { action_respond_info('ERROR: THE TOOLHEAD DOES NOT EXIST') }
      CANCEL_PRINT
    {% endif %}

    ## CHECK EXTRUDER
    {% if printer.toolhead.extruder == printer['gcode_macro CONFIGS_IDEX'].extruder_0_name|string %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder VALUE=0
    {% elif printer.toolhead.extruder == printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder VALUE=1
    {% else %}
      { action_respond_info('ERROR: THE EXTRUDER DOES NOT EXIST') }
      CANCEL_PRINT
    {% endif %}
    
    ## CHECK IF TOOLHEAD AND EXTRUDER ARE IN THE SAME
    {% if printer['gcode_macro CONFIGS_IDEX'].current_tool|int != printer['gcode_macro CONFIGS_IDEX'].current_extruder|int %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=current_extruder VALUE={ printer['gcode_macro CONFIGS_IDEX'].current_tool|int }
      {% if printer['gcode_macro CONFIGS_IDEX'].current_extruder == 0 %}
        ACTIVATE_EXTRUDER EXTRUDER='{ printer['gcode_macro CONFIGS_IDEX'].extruder_0_name|string }'
      {% else %}
        ACTIVATE_EXTRUDER EXTRUDER='{ printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string }'
      {% endif %}
    {% endif %}

    ## LOAD CURRENT VALUES
    CONFIGS_LOAD_CURRENT_VALUES

    ## ACTIONS WITH CURRENT TOOLHEAD
    EXTRUDER_COOLDOWN
    
    {% if new_extruder is defined %}
      {% if new_extruder == 0 %}
        T0
      {% elif new_extruder == 1 %}
        T1
      {% else %}
        { action_respond_info('THE TOOLHEAD DOES NOT EXIST') }
        CANCEL_PRINT
      {% endif %}
    {% else %}
      { action_respond_info('NEW EXTRUDER NOT SELECTED, ACTIVATING 0') }
      CANCEL_PRINT
      T0
    {% endif %}
    
[gcode_macro PARK_EXTRUDER]
gcode:
    #SAVE_GCODE_STATE NAME=park_position
    {% if printer['gcode_macro CONFIGS_IDEX'].new_extruder|int == printer['gcode_macro CONFIGS_IDEX'].current_tool|int %}
      {% if printer['gcode_macro CONFIGS_IDEX'].new_extruder|int == 0 %}
        _SET_CURRENT_CARRIAGE CARRIAGE=1
      {% else %}
        _SET_CURRENT_CARRIAGE CARRIAGE=0
      {% endif %}
    {% else %}
      _SET_CURRENT_CARRIAGE CARRIAGE={ printer['gcode_macro CONFIGS_IDEX'].current_tool|int }
    {% endif %}

    _PARKING_EXTRUDER
    #RESTORE_GCODE_STATE NAME=park_position

[gcode_macro _PARKING_EXTRUDER]
gcode:
    LOAD_OFFSETS
    G90
    G1 X{ printer['gcode_macro CONFIGS_IDEX'].current_extruder_park|float } F{ printer['gcode_macro CONFIGS_IDEX'].park_speed|int }
    M400

# Activate the primary extruder
[gcode_macro T0]
gcode:
    {% set ispurge = false %}

    {% if "xyz" not in printer.toolhead.homed_axes %}
      _HOME_OVERWRITE
      G28
    {% endif %}

    {% if not params.NEW_EXTRUDER is defined %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=new_extruder VALUE=0
      CONFIGS_LOAD_CURRENT_VALUES
    {% endif %}
    
    ACTIVATE_EXTRUDER EXTRUDER='{ printer['gcode_macro CONFIGS_IDEX'].extruder_0_name|string }'
    {% if printer['gcode_macro CONFIGS_IDEX'].extruder_0_temp|int > 0 %}
      { action_respond_info('HEATING EXTRUDER: ' + printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string + ' to ' + printer['gcode_macro CONFIGS_IDEX'].extruder_1_temp|string ) }
      M104 S{ printer['gcode_macro CONFIGS_IDEX'].extruder_0_temp|int } T0
      PARK_EXTRUDER    
      M109 S{ printer['gcode_macro CONFIGS_IDEX'].extruder_0_temp|int } T0
      #G92 E0 ;
      #G1 E+{ printer['gcode_macro CONFIGS_IDEX'].extruder_0_retract|float + printer['gcode_macro CONFIGS_IDEX'].extrude_purge|float } F{ printer['gcode_macro CONFIGS_IDEX'].unretract_speed|float };
      {% set ispurge = true %}
    {% endif %}
    
    EXTRUDER_CLEAN ISPURGE={ ispurge }
    PARK_EXTRUDER
    _SET_CURRENT_CARRIAGE CARRIAGE=0

[gcode_macro T1]
gcode:
    {% set ispurge = false %}

    {% if "xyz" not in printer.toolhead.homed_axes %}
      _HOME_OVERWRITE
      G28
    {% endif %}

    {% if not params.NEW_EXTRUDER is defined %}
      SET_GCODE_VARIABLE MACRO=CONFIGS_IDEX VARIABLE=new_extruder VALUE=1
      CONFIGS_LOAD_CURRENT_VALUES
    {% endif %}

    ACTIVATE_EXTRUDER EXTRUDER='{ printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string }'
    {% if printer['gcode_macro CONFIGS_IDEX'].extruder_1_temp|int > 0 %}
      { action_respond_info('HEATING EXTRUDER: ' + printer['gcode_macro CONFIGS_IDEX'].extruder_1_name|string + ' to ' + printer['gcode_macro CONFIGS_IDEX'].extruder_1_temp|string ) }
      M104 S{ printer['gcode_macro CONFIGS_IDEX'].extruder_1_temp|int } T1
      PARK_EXTRUDER
      M109 S{ printer['gcode_macro CONFIGS_IDEX'].extruder_1_temp|int } T1
      #G92 E0 ;
      #G1 E+{ printer['gcode_macro CONFIGS_IDEX'].extruder_1_retract|float +  printer['gcode_macro CONFIGS_IDEX'].extrude_purge|float } F{ printer['gcode_macro CONFIGS_IDEX'].unretract_speed|float };
      {% set ispurge = true %}
    {% endif %}

    EXTRUDER_CLEAN ISPURGE={ ispurge }
    PARK_EXTRUDER
    _SET_CURRENT_CARRIAGE CARRIAGE=1

[gcode_macro M106]
gcode:

    {% if param_s is defined %}
      {% set param_s = params.S|int %}
      {% if param_s == 255 %}
        {% set realspeed = 1 %}
      {% elif param_s == 0 %}
        {% set realspeed = 0 %}
      {% else %}
        {% set realspeed = 0.392156862745098*param_s %}
      {% endif %}
    {% else %}
      {% set realspeed = 1 %}
    {% endif %}

    {% if param_p is defined %}
      {% set param_p = params.P|int %}
        SET_FAN_SPEED FAN=fan_{param_p} SPEED={realspeed}
    {% else %}
        SET_FAN_SPEED FAN=fan_{ printer['gcode_macro CONFIGS_IDEX'].current_extruder|string } SPEED={ realspeed }
    {% endif %}

[gcode_macro M107]
gcode:

    {% if param_p is defined %}
      {% set param_p = params.P|int %}
      SET_FAN_SPEED FAN=fan_{param_p} SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=fan_0 SPEED=0
      SET_FAN_SPEED FAN=fan_1 SPEED=0  
    {% endif %}